spring:
  profiles:
    active: local

---
spring:
  config:
    activate:
      on-profile: prod
  
  # MongoDB Configuration
  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://localhost:27017/microblog}
      auto-index-creation: false
      
  # Redis Configuration
  redis:
    # Configuración simplificada para mejor diagnóstico
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:password123}
    database: ${REDIS_DATABASE:0}
    timeout: 5000ms
    connect-timeout: 3000ms
    client-type: lettuce
    lettuce:
      pool:
        max-active: 10
        max-idle: 10
        min-idle: 2
        max-wait: 10000ms
        time-between-eviction-runs: 60000ms
      shutdown-timeout: 2000ms
      cluster:
        refresh:
          adaptive: true
          period: 30000ms
        
  # RabbitMQ Configuration
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:admin}
    password: ${RABBITMQ_PASSWORD:password123}
    virtual-host: ${RABBITMQ_VHOST:/}
    connection-timeout: 60s
    requested-heartbeat: 60s
    publisher-confirm-type: correlated
    publisher-returns: true
    template:
      retry:
        enabled: true
        initial-interval: 5s
        max-attempts: 3
        max-interval: 60s
        multiplier: 2
      mandatory: true
    listener:
      simple:
        retry:
          enabled: true
          initial-interval: 5s
          max-attempts: 3
          max-interval: 60s
          multiplier: 2
        default-requeue-rejected: false
        acknowledge-mode: auto
        missing-queues-fatal: true
        auto-startup: true
        
  # Cache Configuration
  cache:
    type: redis
    redis:
      time-to-live: 600000 # 10 minutes (más tiempo en prod)
      cache-null-values: false

# Server Configuration
server:
  port: ${SERVER_PORT:8080}
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
    
# Management & Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
  metrics:
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.95, 0.99

# Logging Configuration
logging:
  level:
    com.uala.microblog: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

---
spring:
  config:
    activate:
      on-profile: local
  
  # MongoDB Configuration (localhost porque app corre local)
  data:
    mongodb:
      uri: mongodb://localhost:27017/microblog
      database: microblog
      auto-index-creation: false
      
  # Redis Configuration (localhost porque app corre local)
  redis:
    # Configuración detallada para mejor diagnóstico en desarrollo
    host: localhost
    port: 6379
    password: password123
    database: 0
    timeout: 2000ms
    connect-timeout: 1500ms
    client-type: lettuce
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 2
        max-wait: 5000ms
        time-between-eviction-runs: 30000ms
      shutdown-timeout: 1000ms
        
  # RabbitMQ Configuration (localhost porque app corre local)
  rabbitmq:
    host: localhost
    port: 5672
    username: admin
    password: password123
    virtual-host: /
    connection-timeout: 60s
    requested-heartbeat: 60s
    publisher-confirm-type: correlated
    publisher-returns: true
    template:
      retry:
        enabled: true
        initial-interval: 2s
        max-attempts: 5
        max-interval: 30s
        multiplier: 2
      mandatory: true
    listener:
      simple:
        retry:
          enabled: true
          initial-interval: 2s
          max-attempts: 5
          max-interval: 30s
          multiplier: 2
        default-requeue-rejected: false
        acknowledge-mode: auto
        missing-queues-fatal: false
        auto-startup: true
        
  # Cache Configuration
  cache:
    type: redis
    redis:
      time-to-live: 300000 # 5 minutes
      cache-null-values: false

# Server Configuration
server:
  port: 8080
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
    
# Management & Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env
  endpoint:
    health:
      show-details: always
      show-components: always
  health:
    redis:
      enabled: true
    defaults:
      enabled: false
  metrics:
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.95, 0.99
        
# Logging Configuration
logging:
  level:
    com.uala.microblog: INFO
    # org.springframework.data.mongodb: DEBUG
    # org.springframework.amqp: DEBUG
    # org.springframework.cache: DEBUG
    # org.springframework.data.redis: DEBUG
    # io.lettuce.core: DEBUG
    # redis: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

---
# Custom Application Properties (shared across all profiles)
microblog:
  fanout:
    enabled: true
    max-timeline-size: 1000
    batch-size: 100
    thread-pool:
      core-size: 5
      max-size: 20
      queue-capacity: 100
  cache:
    timeline-ttl: 300 # 5 minutes
    user-ttl: 600 # 10 minutes
  rabbitmq:
    queues:
      fanout: "microblog.fanout"
      timeline: "microblog.timeline"
      notifications: "microblog.notifications" 